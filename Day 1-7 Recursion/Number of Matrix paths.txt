Number of Matrix paths
Recursion
GoogleMicrosoftAdobe
Problem Statement
Count every path that can lead from the top left to the bottom right of a M X N matrix, with the restriction that you can only move right or down from each cell

Example 1:
Input:  

M = 2, N = 2

Output: 

2

Explanation:

There are only two paths
(0, 0) -> (0, 1) -> (1, 1)
(0, 0) -> (1, 0) -> (1, 1)

Example 2:
Input:  

M = 2, N = 3

Output:

3

Explanation: 

There are three paths
(0, 0) -> (0, 1) -> (0, 2) -> (1, 2)
(0, 0) -> (0, 1) -> (1, 1) -> (1, 2)
(0, 0) -> (1, 0) -> (1, 1) -> (1, 2)

Constraints:
1 <= N, M <= 10

public class Solution {

    public static int numberOfPaths(int m, int n) {

        int arr[]=new int[1];
        pathhelper(0,0,m-1,n-1,arr);
        int result =arr[0];
        return result;
    }
    public static void pathhelper(int startx,int starty,int m,int n,int arr[]){
      if(startx>m||starty>n){
        return;
      }
       if(startx==m&&starty==n){
        arr[0]++;
      }
      pathhelper(startx+1,starty,m,n,arr);
      pathhelper(startx,starty+1,m,n,arr);
      
    }
}
